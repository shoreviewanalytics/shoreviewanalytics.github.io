<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-02-22T18:20:27-05:00</updated><id>http://localhost:4000/</id><title type="html">Shore View Analytics | Blog</title><subtitle>Ubuntu, Data Analysis, Data Visualization and Data Science</subtitle><author><name>chad.downey</name></author><entry><title type="html">Create Jekyll Blog with Minimal Mistakes theme on Ubuntu 16.04</title><link href="http://localhost:4000/Create-Jekyll-Blog-with-Minimal-Mistakes-theme-on-Ubuntu-16.04/" rel="alternate" type="text/html" title="Create Jekyll Blog with Minimal Mistakes theme on Ubuntu 16.04" /><published>2018-02-19T00:00:00-05:00</published><updated>2018-02-19T00:00:00-05:00</updated><id>http://localhost:4000/Create-Jekyll-Blog-with-Minimal-Mistakes-theme-on-Ubuntu-16.04</id><content type="html" xml:base="http://localhost:4000/Create-Jekyll-Blog-with-Minimal-Mistakes-theme-on-Ubuntu-16.04/">&lt;p&gt;Recently, I discovered that I can use &lt;a href=&quot;https://jekyllrb.com/&quot; title=&quot;Jekyll&quot;&gt;Jekyll&lt;/a&gt; on &lt;a href=&quot;https://github.com/&quot; title=&quot;Github&quot;&gt;Github&lt;/a&gt; to publish a blog.  Creating a Jekyll blog and deploying to Github is nothing new, but for me the control that I have over my content and hosting is real value. As long as I work on my blog locally, and back it up periodically, I should always be in the drivers seat for my blog content and not have to worry about the complexities of a hosting company.&lt;/p&gt;

&lt;p&gt;Here are the requirements I had in mind for my blog.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;It should be portable and not dependent on a specific web hosting company platform, especially the content.&lt;/li&gt;
  &lt;li&gt;The theme used for it should be easy to maintain and have advanced features.&lt;/li&gt;
  &lt;li&gt;The theme and blog software should be able to be updated.&lt;/li&gt;
  &lt;li&gt;It should be low to no cost to deploy.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note: If you host your blog using Github and abide by their guidelines you can deploy your blog for no cost.&lt;/p&gt;

&lt;p&gt;There are numerous tutorials that provide the basics on how to use Jekyll to create a blog.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.taniarascia.com/make-a-static-website-with-jekyll/&quot; title=&quot;Tania's Tutorial&quot;&gt;Tania’s tutorial&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The good news is that I encountered very few issues installing the software that is used to build a Jekyll site on Ubuntu 16.04. However, when it comes to deploying a Jekyll blog using a more advanced theme, I had to go through some trial and error and did a fair amount of research.&lt;/p&gt;

&lt;p&gt;The following steps are how I created a Jekyll powered blog using the &lt;a href=&quot;https://mmistakes.github.io/minimal-mistakes/&quot; title=&quot;minimal-mistakes&quot;&gt;minimal-mistakes&lt;/a&gt; theme hosting it using &lt;a href=&quot;https://pages.github.com/&quot; title=&quot;github pages&quot;&gt;github pages&lt;/a&gt;. If you review the quick start guide for the minimal-mistakes theme, it provides three different methods to install. This post uses the fork method. For QA, I have gone through the steps below to build the mininmalmistakesdemo site using these steps at least two times to be sure they are accurate and lead to success.&lt;/p&gt;

&lt;p&gt;I have not used these steps to build a githubusername.github.io site, because I already have my blog published at that location. From my experience with Github you do not have to have a working site at githubusername.github.io to deploy to githubusername.github.io/subsite, but you do need to use this nomenclature to publish a subsite.&lt;/p&gt;

&lt;p&gt;After my initial deployment of my blog using the fork method, I switched gears to the gem method, so I could take advantage of major changes to the theme and have a more tidy repository for my blog. One of my requirements  above was to have a blog that I could easily maintain. If you are in a hurry and want to just get started with the gem method to use the minimal mistakes theme, you can  &lt;a href=&quot;https://github.com/shoreviewanalytics/shoreviewanalytics.github.io&quot; title=&quot;fork&quot;&gt;fork&lt;/a&gt; my repository.&lt;/p&gt;

&lt;p&gt;Please Note: It will be necessary to move slowly and do all the tasks in each step.  As a general warning, some things like the creation of a gh-pages layer on Github (Step 10), if you are not an expert with Github, can be a bit confusing.&lt;/p&gt;

&lt;p&gt;When you complete this tutorial you should have a fully functional Jekyll blog using the minimal-mistakes theme as displayed at the following web address.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://shoreviewanalytics.github.io/minimalmistakesjekylldemo/&quot; title=&quot;minimal-mistakes theme demo&quot;&gt;https://shoreviewanalytics.github.io/minimalmistakesjekylldemo/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The initial version of the site is pretty basic looking, so you will need to make adjustments and add your own content to make it more interesting.&lt;/p&gt;

&lt;h2 id=&quot;step-1&quot;&gt;Step 1&lt;/h2&gt;

&lt;p&gt;Install Ruby using the following command:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install ruby
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Install Bundler&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem install bundler
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Install Git using the following command:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Troubleshooting: If you run into an issue installing or running bundler, you may need to install gcc, make and and a few other packages.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install gcc make zlib1g-dev sqlite3

bundle install

sudo gem install ffi -v '1.9.21'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Please note: If you currently do not have a Github account, you will need to create one, to complete this tutorial.&lt;/p&gt;

&lt;h2 id=&quot;step-2&quot;&gt;Step 2&lt;/h2&gt;

&lt;p&gt;After you have a setup your github account, create a new repository on github, using the following naming conventions.&lt;/p&gt;

&lt;p&gt;Create a repository with a name of githubusername.github.io if you want a web address like:&lt;/p&gt;

&lt;p&gt;https://githubusername.github.io&lt;/p&gt;

&lt;p&gt;Create a repository with a name minimaljekylldemo if you want a web address like:&lt;/p&gt;

&lt;p&gt;https://githubusername.github.io/minimaljekylldemo&lt;/p&gt;

&lt;p&gt;Note: Creating a repository defaults to the root or master level and you can only have one Jekyll site at this level.  All other sites must be placed at the gh-pages level. For example, if you are reading this post and you already have a blog like I do at http://shoreviewanalytics.github.io you would create a new repository called minimaljekylldemo and would navigate to it with the following url.  https://shoreviewanalytics.github.io/minimaljekylldemo.  I will get into the details of how this is done and why below.  The main point of this step is to make sure you create an account on github.com and also create the desired repository.&lt;/p&gt;

&lt;h2 id=&quot;step-3&quot;&gt;Step 3&lt;/h2&gt;

&lt;p&gt;Create a new folder in your home directory to use as a sandbox for your Jekyll efforts.  I called mine websites, but you can call it whatever suites your needs.&lt;/p&gt;

&lt;h2 id=&quot;step-4&quot;&gt;Step 4&lt;/h2&gt;

&lt;p&gt;Next you will need to fork the minimal-mistakes theme.  To do this you will need to login to your github account and then search for the minimal-mistakes repository.  Once you have found the minimal-mistakes repository, click on the fork icon in the upper right hand corner of the repository.  Once the fork process has completed you will have the minimal-mistakes repository as a fork under your github account.&lt;/p&gt;

&lt;h2 id=&quot;step-5&quot;&gt;Step 5&lt;/h2&gt;

&lt;p&gt;Now that you have the minimal-mistakes repository forked to your github account, you can clone it to the folder created in Step 3.&lt;/p&gt;

&lt;p&gt;Click on the green button that says Clone or download and then click on the copy icon to copy the URL to your clipboard. Issue the following command in a terminal when in the root of your sandbox folder.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/shoreviewanalytics/minimal-mistakes.git  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You should now have the minimal-mistakes repository on your local machine.&lt;/p&gt;

&lt;h2 id=&quot;step-6&quot;&gt;Step 6&lt;/h2&gt;

&lt;p&gt;Clean up the minimal-mistakes directory, by removing the following folders and files.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;.github&lt;/li&gt;
  &lt;li&gt;.git&lt;/li&gt;
  &lt;li&gt;docs&lt;/li&gt;
  &lt;li&gt;test&lt;/li&gt;
  &lt;li&gt;screenshot.png&lt;/li&gt;
  &lt;li&gt;screenshot-layouts.png&lt;/li&gt;
  &lt;li&gt;README.md&lt;/li&gt;
  &lt;li&gt;.gitiqnore&lt;/li&gt;
  &lt;li&gt;.gitattributes&lt;/li&gt;
  &lt;li&gt;.editorconfig&lt;/li&gt;
  &lt;li&gt;banner.js&lt;/li&gt;
  &lt;li&gt;CHANGELOG.md&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;step-7&quot;&gt;Step 7&lt;/h2&gt;

&lt;p&gt;Using the command line from the root of the minimal-mistakes directory issue the following commands.&lt;/p&gt;

&lt;p&gt;–Initialize as git&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;–Install bundles&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;–Update bundles&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;–Build the site&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec jekyll serve watch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If using Ubuntu you can either copy the server address and paste it into a browser or right click on the link and choose
“open link”.&lt;/p&gt;

&lt;p&gt;You should now see a very basic looking Jekyll blog, that uses the minimal-mistakes theme.&lt;/p&gt;

&lt;h2 id=&quot;step-8&quot;&gt;Step 8&lt;/h2&gt;

&lt;p&gt;While in the minimal-mistakes directory, copy configuration file named &lt;em&gt;_config.yml&lt;/em&gt; to &lt;em&gt;_config_dev.yml&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Make the following edits to the &lt;em&gt;_config_dev.yml&lt;/em&gt; file.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;url     : &quot;http://localhost:4000/&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;step-9&quot;&gt;Step 9&lt;/h2&gt;

&lt;p&gt;Now when working locally you can issue the following command.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec jekyll serve --config _config_dev.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;note: When working locally you might see the following error when previewing.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ERROR `/favicon.ico' not found.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This error appears to be harmless and doesn’t impact the use of the site or cause any errors that I have seen when deploying to github.&lt;/p&gt;

&lt;h2 id=&quot;step-10&quot;&gt;Step 10&lt;/h2&gt;

&lt;p&gt;Make the appropriate edits to the &lt;em&gt;_config.yml&lt;/em&gt; and &lt;em&gt;_config_dev.yml&lt;/em&gt;.&lt;br /&gt;
For the purposes of this tutorial I will not discuss all of the options in this file. They are described well in the minimal-mistakes documentation.
After making edits run the following command to be sure all is well.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec jekyll serve --config _config_dev.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;step-11&quot;&gt;Step 11&lt;/h2&gt;

&lt;p&gt;Make the appropriate edits to &lt;em&gt;_config.yml&lt;/em&gt; based on your github account and the repository you created.&lt;/p&gt;

&lt;p&gt;The following settings are used if you are creating a sub site or gh-pages site.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;url     : &quot;https://shoreviewanalytics.github.io&quot;
baseurl : &quot;/minimalmistakesjekylldemo&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To ensure the site still compiles run the following commands.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec jekyll --config _config.yml serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now that you have a basic blog minus any customizations that you will want, you can publish it to github.&lt;/p&gt;

&lt;p&gt;There are two different locations where you can publish your blog on github.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;The root of your github account also known as the master.  This is when you want to view your blog at a web address like I am doing at shoreviewanalytics.github.io&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can also serve up your blog using a project site also known as gh-pages.  This is when you want to view your blog at an address like shoreviewanalytics.github.io/minimalmistakesjekylldemo.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note: You can only have one site published at the master level.  You might be able to have multiple repositories at the master level, but github will not recognize multiple jekyll blogs at the root level.&lt;/p&gt;

&lt;p&gt;If you want to setup your blog so it is served at githubusername.github.io just don’t change the default branch as described below.&lt;/p&gt;

&lt;p&gt;If you are following along and only want to demo the minimal-mistakes theme you can create a new repository on github called minimalmistakesjekylldemo.  After creating the repository make sure you place it in a branch adjacent to master by creating a new branch called ‘gh-pages’. To do this you will need to create the branch gh-pages by clicking on branch drop down of the minimalmistakesjekylldemo repository and then typing in the name gh-pages.  Once you have done this click on settings and go to branches and set this repository to the default branch of gh-pages. Make sure you do not have anything in the directory before making this change, otherwise it will all be gone after this change.  :)&lt;/p&gt;

&lt;p&gt;Next, on your local computer open a terminal session in your sandbox root folder to clone the new gh-pages repository by issuing the following command.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/yourgithubusername/minimalmistakesjekylldemo.git
cd minimalmistakesjekylldemo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If you want to access your blog at githubusername.github.io, then you would create a new repository called githubusername.github.io.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/yourgithubusername/yourgithubusername.github.io.git
cd yourgithubusername.github.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Regardless, each folder will be empty except for a .git folder.&lt;/p&gt;

&lt;h2 id=&quot;step-12&quot;&gt;Step 12&lt;/h2&gt;

&lt;p&gt;Next, copy the all the content minus the .git folder from the forked minimal-mistakes repository called “minimal-mistakes”.  Remember the folder options above. You will either be creating a new repository at the master level or gh-pages level.&lt;/p&gt;

&lt;h2 id=&quot;step-13&quot;&gt;Step 13&lt;/h2&gt;

&lt;p&gt;Using a terminal session in the root of the new repository on you local machine, issue the following command to make sure the the site is still functional.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You should be able to navigate to the site locally.&lt;/p&gt;

&lt;h2 id=&quot;step-14&quot;&gt;Step 14&lt;/h2&gt;

&lt;p&gt;Now you can push minimalmistakesjekylldemo or githubusername.github.io to the repository created in step 11.&lt;/p&gt;

&lt;p&gt;Issue the following commands if you want to push to gh-pages.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git add .
git commit -m &quot;first minimalmistakesjekylldemo&quot;
git push -u origin gh-pages
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Issue the following commands if have a repository named githubusername.github.io.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git add .
git commit -m &quot;first githubusername.github.io&quot;
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You should now have a working jekyll blog using the minimal-mistakes theme that is served up at the root or master level or the gh-pages level of your github account.
Of course this is just the beginning to all the fun.  As you can see there are many options and features to explore.&lt;/p&gt;

&lt;p&gt;Congratulations! If you made it to this point in the tutorial successfully, you should consider yourself  AWESOME!&lt;/p&gt;

&lt;h2 id=&quot;tip&quot;&gt;Tip:&lt;/h2&gt;

&lt;p&gt;To assist with creating posts, I highly recommend installing Atom, a powerful text editor that is markdown aware.  Atom let’s you preview your posts as you write them.&lt;/p&gt;

&lt;p&gt;To install Atom on Ubuntu 16.04, use the following commands:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo add-apt-repository ppa:webupd8team/atom
sudo apt update; sudo apt install atom
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;markdown-reference&quot;&gt;Markdown Reference:&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&quot; title=&quot;Markdown-Cheatsheet&quot;&gt;Markdown-Cheatsheet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cirosantilli.com/markdown-style-guide/&quot; title=&quot;Markdown Style Guide&quot;&gt;Markdown Style Guide&lt;/a&gt;&lt;/p&gt;</content><author><name>chad.downey</name></author><summary type="html">Recently, I discovered that I can use Jekyll on Github to publish a blog. Creating a Jekyll blog and deploying to Github is nothing new, but for me the control that I have over my content and hosting is real value. As long as I work on my blog locally, and back it up periodically, I should always be in the drivers seat for my blog content and not have to worry about the complexities of a hosting company.</summary></entry></feed>